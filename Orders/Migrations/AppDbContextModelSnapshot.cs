// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrdersAPI.Persistance;

#nullable disable

namespace OrdersAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrdersAPI.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("OrderDate");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("UserId");

                    b.HasKey("Id")
                        .HasName("PK_Order_Id");

                    b.HasIndex("Id")
                        .HasDatabaseName("IX_Order_Id");

                    b.HasIndex("OrderDate")
                        .HasDatabaseName("IX_Order_Date");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_Order_UserId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("OrdersAPI.Domain.ProductRef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric")
                        .HasColumnName("Quantity");

                    b.HasKey("Id")
                        .HasName("PK_ProductRef_Key");

                    b.HasIndex("Id")
                        .HasDatabaseName("IX_ProductRef_Id");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("IX_ProductRef_OrderId");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("IX_ProductRef_ProductId");

                    b.ToTable("ProductRef", (string)null);
                });

            modelBuilder.Entity("OrdersAPI.Domain.ProductRef", b =>
                {
                    b.HasOne("OrdersAPI.Domain.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrdersAPI.Domain.Order", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
